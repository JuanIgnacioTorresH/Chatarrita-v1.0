#Esta version hace el recorrido por el borde pero va a reinciando de a poco lo que lo hace inviable
from machine import Pin
import time

In3 = Pin (13, Pin.OUT)
In3 = Pin (12, Pin.OUT)
In3 = Pin (11, Pin.OUT)
In3 = Pin (10, Pin.OUT)
infr1 = Pin (6, Pin.IN)
infr2 = Pin (7, Pin.IN)
#Delanteros
infr3 = Pin (8, Pin.IN)
#Trasero Izq
infr4 = Pin (9, Pin.IN)
#Trasero Derecho

def move_forward():
    In1.high()
    In2.low()
    In3.high()
    In4.low()
    #Funcion para ir adelante

def turn_right():
    In1.low()
    In2.low()
    In3.low()
    In4.high()
    #Funcion para girar a la derecha


def stop():
    In1.low()
    In2.low()
    In3.low()
    In4.low()
    #Funcion para detenerse

def initial_position():
    time1 = utime_ticks_s()
    while utime_ticks_diff(utime_ticks_s - time1) < 1: #El 1 seria la cantidad de segundos que le quiero dar, eso hay que probarlo.
        turn_right()
        #Giras a la derecha por tantos segundos. la idea seria ajuistarlo para que gire 90°
    if infr1.value() == 0 and infr2.value() == 0:
        while infr1.value() == 0 or infr2.value() == 0:
            if In1.value == 0 or In4.value == 0 or In3.value == 1 or In2.value == 1:
                move_forward()
                #Se mueve hasta llegar al borde
    time1 = utime_ticks_s()
    while utime_ticks_diff(utime_ticks_s - time1) < 1: #El 1 seria la cantidad de segundos que le quiero dar, eso hay que probarlo.
        turn_left()
        #Giras a la  por tantos segundos. la idea seria ajuistarlo para que gire 90° en sentido contrario
    sleep_us (2)

while True:
    initial_position():
    move_forward()
    if infr2_value() == 0 and infr4_value == 0:
        initial_position()